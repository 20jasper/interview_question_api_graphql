
name: publish docs

on:
  workflow_call:
    secrets:
      GITHUB_PAT:
        description: Personal Access Token for Docs repo write access
        required: true

jobs:
  ci:
    timeout-minutes: 10
    name: publish docs 
    runs-on: ubuntu-latest 
    env: 
      BASE_URL: https://banki-api.up.railway.app
      GRAPHQL_ENDPOINT: ${{ github.env.BASE_URL }}/api/graphql
      TARGET_REPO_USER: 20jasper
      TARGET_REPO_NAME: interview_question_api_graphql_docs

    steps:
      - name: checkout api repo
        uses: actions/checkout@v3

      - name: checkout docs repo
        uses: actions/checkout@v3
        with: 
          repository: ${{ env.TARGET_REPO_USER }}/${{ env.TARGET_REPO_NAME }}
          path: ${{ env.TARGET_REPO_NAME }}
          token: ${{ secrets.GITHUB_PAT }}

      - name: Install Graphdoc CLI
        run: npm install -g @2fd/graphdoc
      - name: Generate GraphQL docs
        run: npx graphdoc -e https://banki-api.up.railway.app/api/graphql -o ./${{ env.TARGET_REPO_NAME }}/docs/graphql -f

      - name: Configure git user
        working-directory: ./${{ env.TARGET_REPO_NAME }}
        run: |
          git config --local user.email github-actions@github.com
          git config --local user.name github-actions

      - name: Add files
        working-directory: ./${{ env.TARGET_REPO_NAME }}
        run: |
          git add .
          
      - name: Commit files
        working-directory: ./${{ env.TARGET_REPO_NAME }}
        # eof is required since git commit returns a multiline string
        run: |
          COMMIT_MESSAGE=$(cat << EOF
          '$(git commit -m "Updating graphql docs!")'
          EOF
          ) >> $GITHUB_ENV
        
          # DELIMITER=EOF
          # echo "COMMIT_RESPONSE<<$DELIMITER" >> "$GITHUB_ENV"
          # git commit -m "Updating graphql docs!" >> $GITHUB_ENV
          # echo "$DELIMITER" >> $GITHUB_ENV

      - name: Push files
        working-directory: ./${{ env.TARGET_REPO_NAME }}
        # if remote is not up to date
        if: ${{ !contains(env.COMMIT_RESPONSE, 'Your branch is up to date') }}
        run: git push

